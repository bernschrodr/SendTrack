{"version":3,"sources":["img/image-from-rawpixel-id-558785-jpeg.jpg","img/image-from-rawpixel-id-558806-jpeg.jpg","SVG/search-solid.svg","SVG/youtube-icon.svg","SVG/spotify-icon.svg","SVG/youtube-music-icon.svg","SendTrack_lib.js","Components/InputForm.js","Components/Link.js","Components/LinksBlock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ServicesUrl","youtubeMusic","youtube","spotify","appleMusic","deezer","urlWorker","url","objectToCompare","serviceObj","inputUrl","index","serviceName","Service","found","checkServiceUrl","cutUrl","substring","urlString","indexOf","eraseDomain","console","log","service","checkService","artist","track","requestObj","requestYoutubeObject","urlSubstring","result","type","eraseYoutubeWatchArg","arrayArguments","split","i","length","argument","value","createYoutubeArguments","notValid","resUrl","items","snippet","title","channelTitle","eraseBrackets","eraseFeat","id","createObjectToCompare","requestSpotifyObject","argumentsObj","createSpotifyArguments","name","external_urls","artists","urlValidator","str","requestType","objType","xhr","XMLHttpRequest","resultRequest","notValidObj","isAlbum","open","send","videoInfoObj","status","alert","statusText","JSON","parse","responseText","pageInfo","totalResults","API_KEY","buffer","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","getCookie","obj","token","setCookie","expires","Date","now","getSpotifyToken","checkTokenInCookie","q","setRequestHeader","total","createArrayOfUrls","arrayOfUrls","hasOwnProperty","writeProps","albumArt","initialService","spotifyRequest","requestedObj","returnedItem","spotifyReturnedObject","artistName","trackName","similarObject","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tracks","Symbol","iterator","next","done","item","validator","matchStringsWithoutSpecs","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","err","return","searchInSpotifyObject","album","images","youtubeRequest","youtubeReturnedObject","foundFlag","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","validTitle","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","searchInYoutubeObject","videoId","thumbnails","high","firstString","secondString","reg","splitedFirstString","splitedSecondString","filter","el","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","substringFirst","indicator","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","substringSecond","search","arguments","serviceString","options","d","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","InputForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","placeholder","content","isUrl","handleInputChange","bind","assertThisInitialized","handleSubmit","e","target","setState","preventDefault","input","onSubmit","react_default","a","createElement","className","onChange","onClick","src","searchLogo","alt","Component","LinksBlock","href","rel","getInfo","getLinks","spotify_icon","youtube_icon","youtubeMusic_icon","push","Link_LinksBlock","App","initialState","background","getLink","objToCompare","splitedString","word","trim","searchByWord","crystall","InputForm_InputForm","LinksBlock_LinksBlock","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01be67af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image-from-rawpixel-id-558785-jpeg.be7bc74e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-from-rawpixel-id-558806-jpeg.c8726bd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/search-solid.f542b8a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube-icon.98390dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/spotify-icon.e3366f54.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube-music-icon.dda65f8d.svg\";","\r\nconst ServicesUrl = {\r\n    youtubeMusic: \"music.youtube\",\r\n    youtube: \"youtube\",\r\n    spotify: \"spotify\",\r\n    appleMusic: \"music.apple\",\r\n    deezer: \"deezer\"\r\n\r\n}\r\n\r\nexport function searchByWord(str){\r\n    if(str === '')\r\n        return{notValid: 'empty string'}\r\n    var splitedString;\r\n    if(str.indexOf('-') !== -1)\r\n        splitedString = str.split('-');\r\n    if(str.indexOf('–') !== -1)\r\n        splitedString = str.split('–');\r\n    console.log(splitedString);\r\n\r\n    splitedString = splitedString.filter(word => word !== '');\r\n    var objectToCompare = {notValid: 'not valid input'};\r\n    if(splitedString.length > 1)\r\n        objectToCompare = createObjectToCompare(splitedString[0].trim(), splitedString[1].trim());\r\n\r\n    return objectToCompare;\r\n}\r\n\r\nexport function urlWorker(url) {\r\n    var serviceObj = checkService(url);\r\n    var objectToCompare;\r\n\r\n    if (serviceObj.service === ServicesUrl.youtube || serviceObj.service === ServicesUrl.youtubeMusic) {\r\n        let requestObj = requestYoutubeObject(\r\n            createYoutubeArguments(serviceObj), 'track');\r\n\r\n        if ('isAlbum' in requestObj)\r\n            return {\r\n                notValid: 'this is playlist. Now we cant work with them',\r\n                artist: '',\r\n                track: 'this is playlist. Now we cant work with them',\r\n                url: '',\r\n                service: serviceObj.service\r\n            }\r\n\r\n        if ('notValid' in requestObj)\r\n            return {\r\n                notValid: 'Not found:(',\r\n                artist: '',\r\n                track: 'Not found:(',\r\n                url: '',\r\n                service: serviceObj.service\r\n            };\r\n\r\n        console.log(requestObj);\r\n\r\n        var artist;\r\n        var track;\r\n        let index = requestObj.items[0].snippet.title.indexOf('-');\r\n\r\n        if (requestObj.items[0].snippet.title.indexOf('-') !== -1) {\r\n            artist = requestObj.items[0].snippet.title.substring(0, index);\r\n            track = requestObj.items[0].snippet.title.substring(index, requestObj.items[0].snippet.title.length);\r\n        }\r\n        else {\r\n            artist = requestObj.items[0].snippet.channelTitle;\r\n            track = requestObj.items[0].snippet.title;\r\n        }\r\n        //ERASE BRACKETS\r\n        track = eraseBrackets(track);\r\n        artist = eraseBrackets(artist);\r\n        track = eraseFeat(track);\r\n        artist = eraseFeat(artist);\r\n\r\n        var resUrl;\r\n        if (serviceObj.service === 'youtube')\r\n            resUrl = \"https://www.youtube.com/watch?v=\" + requestObj.items[0].id;\r\n        else\r\n            if (serviceObj.service === 'youtubeMusic')\r\n                resUrl = \"https://www.music.youtube.com/watch?v=\" + requestObj.items[0].id;\r\n\r\n        objectToCompare = createObjectToCompare(artist, track, resUrl, serviceObj.service);\r\n        console.log(objectToCompare);\r\n        index = objectToCompare.artist.indexOf(\" - Topic\");\r\n        if (index !== -1)\r\n            objectToCompare.artist = objectToCompare.artist.substring(0, index);\r\n        return objectToCompare;\r\n    }\r\n\r\n    if (serviceObj.service === ServicesUrl.spotify) {\r\n        let requestObj = requestSpotifyObject(\r\n            createSpotifyArguments(serviceObj), 'track');\r\n        console.log(requestObj);\r\n\r\n        if (requestObj.type === 'album') {\r\n            return {\r\n                artist: '',\r\n                track: 'this is album',\r\n                url: ''\r\n            }\r\n        }\r\n\r\n        if ('notValid' in requestObj)\r\n            return {\r\n                artist: '',\r\n                track: 'error:' + requestObj.notValid,\r\n                url: ''\r\n            }\r\n\r\n        track = requestObj.name;\r\n        url = requestObj.external_urls.spotify;\r\n        artist = requestObj.artists[0].name;\r\n\r\n        //ERASE BRACKETS\r\n        track = eraseBrackets(track);\r\n        artist = eraseBrackets(artist);\r\n        track = eraseFeat(track);\r\n        artist = eraseFeat(artist);\r\n\r\n        objectToCompare = createObjectToCompare(artist, track, url, serviceObj.service);\r\n\r\n        return objectToCompare;\r\n    }\r\n    return {\r\n        notValid: 'Not Found:(',\r\n        artist: 'Not Found:(',\r\n        track: '',\r\n        url: ''\r\n    };\r\n}\r\n\r\nexport function urlValidator(url) {\r\n    let index;\r\n    if(url.indexOf('.') !== -1)\r\n        index = url.indexOf('.');\r\n    else\r\n        return false;\r\n\r\n    index = url.indexOf('/', index);\r\n    if (index !== -1)\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nfunction eraseDomain(urlString) {\r\n    var index = urlString.indexOf('/');\r\n    return urlString.substring(index + 1);\r\n}\r\n\r\nfunction eraseBrackets(str) {\r\n    let result = str;\r\n    let index;\r\n    if (str.indexOf('(') !== -1 && str.indexOf(')') !== -1) {\r\n        index = str.indexOf('(');\r\n        result = str.substring(0, index) + str.substring(str.indexOf(')') + 1, str.length);\r\n    }\r\n\r\n    if (str.indexOf('[') !== -1 && str.indexOf(']') !== -1) {\r\n        index = str.indexOf('[');\r\n        result = str.substring(0, index) + str.substring(str.indexOf(']') + 1, str.length);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction eraseFeat(str) {\r\n    let result = str;\r\n    let index;\r\n    if (str.indexOf(/feat/i) !== -1) {\r\n        index = str.indexOf(/feat/i);\r\n        result = str.substring(0, index);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction requestYoutubeObject(argumentsObj, requestType) {\r\n\r\n    var objType = argumentsObj.type;\r\n    delete argumentsObj.type;\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    const YOUTUBE_API_SERVER = \"https://www.googleapis.com/youtube/v3/\";\r\n    const API_KEY = \"AIzaSyBEYdv5D-1VmQHgb5d3jR2qn2mo_mvlr9g\";\r\n    var resultRequest = YOUTUBE_API_SERVER;\r\n\r\n    const maxResults = 25;\r\n    const notValidObj = { notValid: '' }\r\n\r\n    if (objType === 'album') {\r\n        resultRequest += 'playlistItems?';\r\n        return {\r\n            isAlbum: ''\r\n        }\r\n    }\r\n\r\n    switch (requestType) {\r\n        case 'track':\r\n            resultRequest += 'videos?';\r\n            break;\r\n        case 'search':\r\n            resultRequest += 'search?';\r\n            break;\r\n        default:\r\n            console.log(\"not valid request type\");\r\n            return notValidObj;\r\n\r\n    }\r\n    resultRequest += 'part=snippet';\r\n\r\n    for (var argument in argumentsObj) {\r\n        switch (argument) {\r\n            case 'v':\r\n                resultRequest += \"&id=\" + argumentsObj[argument];\r\n                break;\r\n            case 'q':\r\n                resultRequest += \"&q=\" + argumentsObj[argument] +\r\n                    \"&maxResults=\" + maxResults + \"&type=video&videoCategoryId=10\";\r\n                break;\r\n            case 'list':\r\n                break;\r\n            case 'feature':\r\n                break;\r\n\r\n            default:\r\n                console.log(\"bad argument = Not Found\")\r\n                return notValidObj;\r\n        }\r\n    }\r\n    resultRequest += \"&key=\" + API_KEY;\r\n\r\n\r\n    xhr.open('GET', resultRequest, false);\r\n    // 3. Отсылаем запрос\r\n    xhr.send();\r\n\r\n    let videoInfoObj = {\r\n        notValid: ''\r\n    }\r\n\r\n    // 4. Если код ответа сервера не 200, то это ошибка\r\n    if (xhr.status !== 200) {\r\n        // обработать ошибку\r\n        alert(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found\r\n    } else {\r\n        // вывести результат\r\n        // responseText -- текст ответа.\r\n        if (JSON.parse(xhr.responseText).pageInfo.totalResults !== 0)\r\n            videoInfoObj = JSON.parse(xhr.responseText);\r\n        else\r\n            videoInfoObj.notValid = 'Not Found';\r\n    }\r\n\r\n    console.log(videoInfoObj);\r\n\r\n    return videoInfoObj;\r\n}\r\n\r\nfunction requestSpotifyObject(argumentsObj, requestType) {\r\n\r\n    const SPOTIFY_API_SERVER = \"https://api.spotify.com/v1/\";\r\n    var API_KEY = checkTokenInCookie();\r\n    const notValidObj = { notValid: '' };\r\n    let requestObj = notValidObj;\r\n    const maxResults = 10;\r\n    var url = SPOTIFY_API_SERVER;\r\n\r\n\r\n    if ('artists' in argumentsObj) {\r\n        requestObj.notValid = 'artist';\r\n        return requestObj;\r\n    }\r\n\r\n    switch (requestType) {\r\n        case 'track':\r\n            url += 'tracks/' + argumentsObj.track;\r\n            break;\r\n        case 'search':\r\n            url += 'search?q=' + argumentsObj.q + '&type=track&limit=' + maxResults;\r\n            break;\r\n        default:\r\n            return notValidObj;\r\n    }\r\n\r\n    console.log(url);\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, false);\r\n\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.setRequestHeader('Authorization', 'Bearer ' + API_KEY);\r\n\r\n    xhr.send();\r\n\r\n    if (xhr.status !== 200) {\r\n        // обработать ошибку\r\n        alert(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found\r\n        requestObj[notValidObj] = xhr.statusText;\r\n    } else {\r\n        // вывести результат\r\n        // responseText -- текст ответа.\r\n        if (JSON.parse(xhr.responseText).total !== 0)\r\n            requestObj = JSON.parse(xhr.responseText);\r\n    }\r\n\r\n\r\n    console.log(xhr.responseText);\r\n\r\n    return requestObj;\r\n\r\n}\r\n\r\nfunction getSpotifyToken() {\r\n    /*const base64key = \"Yjc0MmYwNWIxM2JkNGIzZmFmYzQ1MWNhOTYzYTMwNTM6NDM1M2FiZjQxMThjNGZkZDg2ODdhZjk4ZDQ3ZTA1NmM=\";\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    var xhr = new XMLHttpRequest();\r\n    var body = encodeURIComponent('grant_type') + encodeURIComponent('=') + encodeURIComponent('client_credentials');\r\n    console.log(body);\r\n    const url = 'https://accounts.spotify.com/api/token';\r\n    xhr.open(\"POST\", proxyurl + url, false);\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.setRequestHeader('Authorization', 'Basic ' + base64key);\r\n    var result;\r\n\r\n    xhr.send(body);\r\n    if (xhr.status !== 200) {\r\n        alert(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found\r\n    } else {\r\n        result = JSON.parse(xhr.responseText);\r\n    }  */\r\n\r\n\r\n    var result;\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", '/token', false);\r\n    xhr.send();\r\n    if (xhr.status !== 200) {\r\n        alert(xhr.status + ': ' + xhr.statusText + \"Can't get spotify token from sendtrack server\"); // пример вывода: 404: Not Found\r\n    } else {\r\n        var obj = JSON.parse(xhr.responseText);\r\n        result = obj.token;\r\n        setCookie('spotifyKey', obj.token, { expires: (obj.expires - Date.now()) / 1000 });\r\n\r\n    }\r\n\r\n    /*    fetch('http://sendtrack-backend.ddns.net:9741/token',{ method: 'GET'})\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(myJson) {\r\n        alert(result);\r\n        return myJson.token;\r\n      }); */\r\n\r\n    console.log(result);\r\n    return result;\r\n}\r\n\r\nfunction createSpotifyArguments(serviceObj) {\r\n\r\n    var urlSubstring = serviceObj.cutUrl;\r\n    var argumentsObj = {};\r\n\r\n    var arrayArguments = urlSubstring.split('/');\r\n    argumentsObj[arrayArguments[0]] = arrayArguments[1];\r\n\r\n    console.log(argumentsObj);\r\n\r\n    return argumentsObj;\r\n}\r\n\r\nfunction eraseYoutubeWatchArg(urlSubstring) {\r\n    var index = urlSubstring.indexOf('watch?');\r\n    return urlSubstring.substring(index + 'watch?'.length);\r\n}\r\n\r\nfunction createYoutubeArguments(serviceObj) {\r\n\r\n    var urlSubstring = serviceObj.cutUrl;\r\n    var result = {};\r\n\r\n    if (urlSubstring.indexOf('watch?') !== -1) {\r\n        result.type = 'track';\r\n        eraseYoutubeWatchArg(urlSubstring)\r\n    }\r\n    else {\r\n        result.type = 'album';\r\n        return result;\r\n    }\r\n\r\n    var arrayArguments = eraseYoutubeWatchArg(urlSubstring).split('&');\r\n    for (var i = 0; i < arrayArguments.length; i++) {\r\n        var index = arrayArguments[i].indexOf(\"=\");\r\n        var argument = arrayArguments[i].substring(0, index);\r\n        var value = arrayArguments[i].substring(index + 1, arrayArguments[i].length);\r\n        result[argument] = value;\r\n    }\r\n    console.log(result);\r\n    return result;\r\n\r\n}\r\n\r\nexport function createArrayOfUrls(objectToCompare) {\r\n    let arrayOfUrls = {\r\n        spotify: 'Not Found',\r\n        youtube: 'Not Found',\r\n        youtubeMusic: 'Not Found'\r\n    }\r\n\r\n    if (objectToCompare.hasOwnProperty('notValid')){\r\n        console.log(objectToCompare.notValid);\r\n        return arrayOfUrls;}\r\n\r\n    function writeProps(artist, track, url, albumArt) {\r\n        return {\r\n            artist: artist,\r\n            track: track,\r\n            url: url,\r\n            albumArt: albumArt\r\n        }\r\n    }\r\n    if (objectToCompare.initialService !== ServicesUrl.spotify) {\r\n\r\n        let spotifyRequest = {\r\n            q: objectToCompare.artist + ' ' + objectToCompare.track\r\n        }\r\n        console.log(objectToCompare);\r\n\r\n        let requestedObj = requestSpotifyObject(spotifyRequest, 'search');\r\n        console.log(requestedObj);\r\n\r\n        if (!requestedObj.hasOwnProperty('type') && requestedObj.type !== 'album'\r\n            && !requestedObj.hasOwnProperty('notValid')) {\r\n\r\n            let returnedItem = searchInSpotifyObject(requestedObj, objectToCompare);\r\n            if (!returnedItem.hasOwnProperty('notValid')) {\r\n                let artists = '';\r\n                for (var i = 0; i < returnedItem.artists.length; i++) {\r\n                    if (i !== returnedItem.artists.length - 1)\r\n                        artists += returnedItem.artists[i].name + ', ';\r\n                    else\r\n                        artists += returnedItem.artists[i].name;\r\n                }\r\n\r\n                arrayOfUrls.spotify = writeProps(artists, returnedItem.name, returnedItem.external_urls.spotify,\r\n                    returnedItem.album.images[0].url);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (objectToCompare.initialService !== ServicesUrl.youtubeMusic || objectToCompare.initialService !== 'youtube') {\r\n        let youtubeRequest = {\r\n            q: objectToCompare.artist + ' ' + objectToCompare.track\r\n        }\r\n        console.log(youtubeRequest.q);\r\n\r\n        console.log('Initial Service: ' + objectToCompare.initialService);\r\n\r\n        let requestedObj = requestYoutubeObject(youtubeRequest, 'search');\r\n        if (!requestedObj.hasOwnProperty('notValid')) {\r\n            let returnedItem = searchInYoutubeObject(requestedObj, objectToCompare);\r\n            if (!returnedItem.hasOwnProperty('notValid')) {\r\n                if (returnedItem.snippet.channelTitle.indexOf('- Topic') === -1) {\r\n                    if (objectToCompare.initialService !== ServicesUrl.youtubeMusic)\r\n                        arrayOfUrls.youtubeMusic = writeProps('', returnedItem.snippet.title, 'https://music.youtube.com/watch?v=' + returnedItem.id.videoId, returnedItem.snippet.thumbnails.high.url);\r\n                    if (objectToCompare.initialService !== ServicesUrl.youtube)\r\n                        arrayOfUrls.youtube = writeProps('', returnedItem.snippet.title, 'https://youtube.com/watch?v=' + returnedItem.id.videoId, returnedItem.snippet.thumbnails.high.url);\r\n                }\r\n                else {\r\n                    if (objectToCompare.initialService !== ServicesUrl.youtubeMusic)\r\n                        arrayOfUrls.youtubeMusic = writeProps(returnedItem.snippet.channelTitle.substring(0, returnedItem.snippet.channelTitle.indexOf('- Topic')),\r\n                            returnedItem.snippet.title, 'https://music.youtube.com/watch?v=' + returnedItem.id.videoId,\r\n                            returnedItem.snippet.thumbnails.high.url);\r\n                    if (objectToCompare.initialService !== ServicesUrl.youtube)\r\n                        arrayOfUrls.youtube = writeProps(returnedItem.snippet.channelTitle.substring(0, returnedItem.snippet.channelTitle.indexOf('- Topic')),\r\n                            returnedItem.snippet.title, 'https://youtube.com/watch?v=' + returnedItem.id.videoId,\r\n                            returnedItem.snippet.thumbnails.high.url);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    console.log(arrayOfUrls);\r\n    return arrayOfUrls;\r\n}\r\n\r\nfunction searchInYoutubeObject(youtubeReturnedObject, objectToCompare) {\r\n    const artistName = objectToCompare.artist;\r\n    const trackName = objectToCompare.track;\r\n    const notFound = { notValid: 'Not Found2' };\r\n    var similarObject = notFound;\r\n    let foundFlag = false;\r\n\r\n    for (let item of youtubeReturnedObject.items) {\r\n        if (item.snippet.channelTitle.indexOf('- Topic') !== -1) {\r\n            var validTitle = item.snippet.channelTitle.substring(\r\n                0, item.snippet.channelTitle.indexOf(' - Topic'));\r\n            if (!matchStringsWithoutSpecs(trackName, item.snippet.title) && !matchStringsWithoutSpecs(item.snippet.title, trackName))\r\n                continue;\r\n            if (!matchStringsWithoutSpecs(artistName, validTitle) && !matchStringsWithoutSpecs(validTitle, artistName))\r\n                continue;\r\n            similarObject = item;\r\n            foundFlag = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!foundFlag) {\r\n        for (let item of youtubeReturnedObject.items) {\r\n            if (!matchStringsWithoutSpecs(artistName + ' ' + trackName, item.snippet.title) && !matchStringsWithoutSpecs(item.snippet.title, artistName + ' ' + trackName))\r\n                continue;\r\n            similarObject = item;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return similarObject;\r\n\r\n}\r\n\r\nfunction searchInSpotifyObject(spotifyReturnedObject, objectToCompare) {\r\n    const artistName = objectToCompare.artist;\r\n    const trackName = objectToCompare.track;\r\n    const notFound = { notValid: 'Not Found2' };\r\n\r\n    var similarObject = notFound;\r\n    for (var item of spotifyReturnedObject.tracks.items) {\r\n\r\n        let validator = false;\r\n\r\n        if (item.type === 'track') {\r\n\r\n            console.log(item.name);\r\n\r\n            if (!matchStringsWithoutSpecs(trackName, item.name) && !matchStringsWithoutSpecs(item.name, trackName))\r\n                continue;\r\n\r\n            for (var artist of item.artists) {\r\n                if (matchStringsWithoutSpecs(artistName, artist.name) && matchStringsWithoutSpecs(artist.name, artistName)) {\r\n                    validator = true;\r\n                    break;\r\n                }\r\n                else\r\n                    validator = false\r\n            }\r\n            similarObject = item;\r\n\r\n            if (validator)\r\n                return similarObject;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return similarObject;\r\n}\r\n\r\nfunction matchStringsWithoutSpecs(firstString, secondString) {\r\n    var reg = new RegExp(\"[\\\\s-\\\\]\\\\[\\\\)\\\\(\\\\/\\\\.&]\", \"i\");\r\n    var splitedFirstString = firstString.split(reg);\r\n    var splitedSecondString = secondString.split(reg);\r\n    splitedFirstString = splitedFirstString.filter(function (el) {\r\n        return el !== \"\";\r\n    });\r\n    splitedSecondString = splitedSecondString.filter(function (el) {\r\n        return el !== \"\";\r\n    });\r\n    console.log(splitedFirstString);\r\n    console.log(splitedSecondString);\r\n\r\n    for (var substringFirst of splitedFirstString) {\r\n        var indicator = false;\r\n        for (var substringSecond of splitedSecondString) {\r\n            let reg = new RegExp(substringSecond, \"i\");\r\n\r\n            if (substringFirst.search(reg) !== -1) {\r\n                indicator = true;\r\n                console.log('Found');\r\n                break;\r\n            }\r\n            else\r\n                indicator = false;\r\n        }\r\n        if (!indicator) {\r\n            console.log('not equal');\r\n            return false;\r\n        }\r\n\r\n    }\r\n    console.log('equal');\r\n    return true;\r\n}\r\n\r\nfunction checkService(inputUrl) {\r\n    var index = -1;\r\n    var serviceName = \"\";\r\n\r\n    for (var Service in ServicesUrl) {\r\n\r\n        var found = checkServiceUrl(inputUrl, ServicesUrl[Service]);\r\n        if (found !== -1) {\r\n            index = found;\r\n            serviceName = ServicesUrl[Service];\r\n            break;\r\n        }\r\n    }\r\n\r\n    var cutUrl = inputUrl.substring(index);\r\n    cutUrl = eraseDomain(cutUrl);\r\n    console.log('Service Name: ' + serviceName);\r\n\r\n    return {\r\n        service: serviceName,\r\n        cutUrl: cutUrl,\r\n    }\r\n\r\n}\r\n\r\nfunction createObjectToCompare(artist = '', track = '', url = '', service = '') {\r\n    return {\r\n        artist: artist,\r\n        track: track,\r\n        url: url,\r\n        initialService: service\r\n    }\r\n}\r\n\r\nfunction checkServiceUrl(urlString, serviceString) {\r\n    var index = urlString.indexOf(serviceString);\r\n    if (index !== -1)\r\n        index += serviceString.length;\r\n\r\n    return index;\r\n}\r\n\r\nfunction setCookie(name, value, options) {\r\n    options = options || {};\r\n\r\n    var expires = options.expires;\r\n\r\n    if (typeof expires == \"number\" && expires) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + expires * 1000);\r\n        expires = options.expires = d;\r\n    }\r\n    if (expires && expires.toUTCString) {\r\n        options.expires = expires.toUTCString();\r\n    }\r\n\r\n    value = encodeURIComponent(value);\r\n\r\n    var updatedCookie = name + \"=\" + value;\r\n\r\n    for (var propName in options) {\r\n        updatedCookie += \"; \" + propName;\r\n        var propValue = options[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += \"=\" + propValue;\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nfunction getCookie(name) {\r\n    var matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction deleteCookie(name) {\r\n    setCookie(name, \"\", {\r\n        expires: -1\r\n    })\r\n}\r\n\r\nfunction checkTokenInCookie() {\r\n    var buffer = getCookie('spotifyKey');\r\n    if (buffer) \r\n        return buffer;\r\n    else \r\n        return getSpotifyToken();\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../scss/InputForm.scss';\r\nimport searchLogo from '../SVG/search-solid.svg';\r\nimport {urlValidator} from '../SendTrack_lib.js';\r\n\r\nexport default class InputForm extends Component {\r\n\r\n    static propTypes = {\r\n        content: PropTypes.string,\r\n        isUrl:  PropTypes.bool\r\n        \r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            placeholder: \"Enter: Url / artist - name\",\r\n            content: '',\r\n            isUrl: false,\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const content = e.target.value;\r\n        this.setState(() => {\r\n            return {\r\n                content,\r\n                isUrl: urlValidator(content),\r\n            };\r\n        })\r\n        console.log(\"changed\");\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const input = this.state.content;\r\n        if (!this.state.isUrl) {\r\n            this.setState(() => ({\r\n                content: '',\r\n                isUrl: false,\r\n            }));\r\n        }\r\n        \r\n        this.props.onSubmit(input, this.state.isUrl);\r\n        this.setState(() => ({\r\n            content: '',\r\n            isUrl: false,\r\n        }))\r\n        console.log(\"submit\");\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='input-form container'>\r\n            <form className='input-form__text-form'>\r\n                <input value={this.state.content}\r\n                    placeholder={this.state.placeholder}\r\n                    onChange={this.handleInputChange}\r\n                    onSubmit={this.handleSubmit} />\r\n                <button onClick={this.handleSubmit}><img src={searchLogo} alt=\"\"/></button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport '../scss/Link.scss'\r\n\r\nexport default class LinksBlock extends Component {\r\n    /*     constructor(props){\r\n            super(props);\r\n            this.state = { \r\n                albumArt: '',\r\n                artist:'',\r\n                track:'',\r\n                url:'',\r\n                service: ''\r\n            }\r\n        } */\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"link container\">\r\n                    <a href={this.props.url} className=\"link__element container\"\r\n                    target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={this.props.albumArt} className=\"link__album-art\" alt=\"\" />\r\n                        <div className=\"link__artist-track container\">\r\n                            <div className=\"link__track-name\">{this.props.track}</div>\r\n                            <div className=\"link__artist-name\">{this.props.artist}</div>\r\n                        </div>\r\n                        <img src={this.props.service} className=\"link__service-name\" alt=\"\"/> \r\n                    </a>\r\n                \r\n            </div>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Link from './Link';\r\nimport '../scss/LinksBlock.scss';\r\nimport youtube_icon from '../SVG/youtube-icon.svg';\r\nimport spotify_icon from '../SVG/spotify-icon.svg';\r\nimport youtubeMusic_icon from '../SVG/youtube-music-icon.svg';\r\n\r\nexport default class LinksBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getInfo = this.getInfo.bind(this);\r\n        this.getLinks = this.getLinks.bind(this);\r\n\r\n    }\r\n\r\n    getInfo() {\r\n        return (<div className='links-block__input-object'>\r\n            {this.props.artist}<br />\r\n            {this.props.track}<br />\r\n            {this.props.url}<br />\r\n        </div>)\r\n    }\r\n\r\n    getLinks() {\r\n        let arrayOfUrls = [];\r\n        function createLinkJSX(item) {\r\n            return (\r\n                <Link service={item.service} artist={item.artist} track={item.track}\r\n                    url={item.url} albumArt={item.albumArt} />\r\n            );\r\n        }\r\n        for (var service in this.props.arrayOfUrls) {\r\n            if (this.props.arrayOfUrls[service] === 'Not Found')\r\n                continue;\r\n            var obj = this.props.arrayOfUrls[service];\r\n            switch(service){\r\n                case 'spotify':\r\n                    obj.service = spotify_icon;\r\n                    break;\r\n                case 'youtube':\r\n                    obj.service = youtube_icon;\r\n                    break;\r\n                case 'youtubeMusic':\r\n                    obj.service = youtubeMusic_icon;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            arrayOfUrls.push(createLinkJSX(obj));\r\n        }\r\n\r\n        console.log(arrayOfUrls);\r\n        return arrayOfUrls;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links-block container\">\r\n                <this.getInfo />\r\n                <this.getLinks />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './scss/App.scss';\r\nimport background from './img/image-from-rawpixel-id-558785-jpeg.jpg';\r\nimport crystall from './img/image-from-rawpixel-id-558806-jpeg.jpg';\r\nimport InputForm from './Components/InputForm';\r\nimport { urlWorker } from '../src/SendTrack_lib.js';\r\nimport { createArrayOfUrls } from '../src/SendTrack_lib.js';\r\nimport { searchByWord } from '../src/SendTrack_lib.js';\r\nimport LinksBlock from './Components/LinksBlock';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  static propTypes = {\r\n    url: PropTypes.string,\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      artist: '',\r\n      track: '',\r\n      url: '',\r\n      background: background,\r\n      arrayOfUrls: {\r\n        spotify: 'Not Found',\r\n        youtube: 'Not Found',\r\n        youtubeMusic: 'Not Found'\r\n      }\r\n    }\r\n    this.state = this.initialState\r\n    this.getLink = this.getLink.bind(this);\r\n  }\r\n\r\n\r\n  getLink(input, isUrl) {\r\n    var objToCompare;\r\n    var albumArt = background;\r\n    if (isUrl)\r\n      objToCompare = urlWorker(input);\r\n    else\r\n      objToCompare = searchByWord(input);\r\n\r\n    var arrayOfUrls = createArrayOfUrls(objToCompare);\r\n    if (arrayOfUrls.spotify !== \"Not Found\")\r\n        albumArt = arrayOfUrls.spotify.albumArt;\r\n    else\r\n      if(arrayOfUrls.youtubeMusic !== \"Not Found\")\r\n        albumArt = arrayOfUrls.youtubeMusic.albumArt;\r\n\r\n      this.setState(() => ({\r\n        artist: objToCompare.artist,\r\n        track: objToCompare.track,\r\n        url: objToCompare.url,\r\n        arrayOfUrls: arrayOfUrls,\r\n        background: albumArt\r\n      }));\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <img className=\"crystall\" src={crystall} alt=\"\"/>\r\n        <img className=\"bg\" src={this.state.background} alt=\"\" />\r\n        <InputForm onSubmit={this.getLink} />\r\n        <LinksBlock arrayOfUrls={this.state.arrayOfUrls} artist={this.state.artist} track={this.state.track} url={this.state.url} />\r\n        <div id=\"result\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}